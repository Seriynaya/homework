services:
  web:
    build: .
    command: >
        bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg-isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - .env


  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build:
      context: .
    command: celery -A pythonProject2 worker -l INFO
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

  celery_beat:
    build:
      context: .
    command: celery -A pythonProject2 beat -l INFO -S django
    volumes:
       - .:/app
    depends_on:
      - db
      - redis
      - celery


networks:
  default:

volumes:
  postgres_data:
  static_volume: